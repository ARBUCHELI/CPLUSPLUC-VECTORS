# VECTORS
---------

* Introduction to Vectors
-------------------------
To do just about anything of interest in a program, we need a group of data to work with.

For example, our program might need:

	. A list of Twitter’s trending tags

	. A set of payment options for a car

	. A catalog of eBooks read over the last year

The need for storing a collection of data is endless.

We are familiar with data types like int and double, but how do we store a group of ints or a group of doubles?

In this lesson, we will start with one of the simplest, and arguably the most useful, ways of storing data in C++: a vector.

A vector is a sequence of elements that you can access by index.

==================================================================================================================================================================

* Creating a Vector
-------------------
The std::vector lives in the <vector> header. So first, we need to add this line of code at the top of the program:

#include <vector>

For review, #include is a preprocessor directive that tells the compiler to include whatever library that follows. In our case that is the standard vector library.

And the syntax to create a vector looks like:

std::vector<type> name;

So to define a vector of ints called calories_today:

std::vector<int> calories_today;

Inside the angle brackets is the data type of the vector. After the angle brackets is the name of the vector.

Note: The type of the vector (i.e., what data type is stored inside) cannot be changed after the declaration.

tokyo.cpp
---------
#include <iostream>
#include <vector>

int main() {
   
  std::vector<double> subway_adult;
  
  // Declare another vector here:
  std::vector<double> subway_child;
    
  
}

==================================================================================================================================================================

* Initializing a Vector
-----------------------
Now we know how to create a vector, we can also initialize a vector, giving it values, as we are creating it in the same line.

For example, instead of just creating a double vector named location:

std::vector<double> location;

We can create and initialize location with specific values:

std::vector<double> location = {42.651443, -73.749302};

Here, we are storing a latitude and a longitude.


Another way we can initialize our vector is by presizing, or setting the size.

Suppose we want to create and initialize a vector with two elements. However, we don’t know what values we want to add yet:

std::vector<double> location(2);

Here, we are creating a double vector and setting the initial size to two using parentheses.

It would look something like this:

| 0.0 | 0.0 |

Because 0.0 is the default value for double.

tokyo.cpp
---------
#include <iostream>
#include <vector>

int main() {
   
  std::vector<double> subway_adult = {800, 1200, 1500};
  
  // Give subway_child some values:
  
  std::vector<double> subway_child = {400, 600, 750};
  
}

==================================================================================================================================================================


























































